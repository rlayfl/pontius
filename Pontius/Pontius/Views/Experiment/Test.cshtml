@{
    ViewData["Title"] = "Experiment - Start";
}

@{
    var experimentTypeClaim = User.Claims.FirstOrDefault(c => c.Type == "ExperimentType")?.Value;

    int? experimentTypeInt = null;

    if (!string.IsNullOrEmpty(experimentTypeClaim) && 
        Enum.TryParse<ExperimentType>(experimentTypeClaim, out var experimentTypeEnum))
    {
        experimentTypeInt = (int)experimentTypeEnum;
    }
}

<p>Experiment Type: @(experimentTypeInt?.ToString() ?? "Unknown")</p>

@switch (experimentTypeClaim)
{
    case "InformationOverload":
        <p>You are running the Information Overload experiment.</p>
        break;
    case "Complexity":
        <p>You are running the Complexity experiment.</p>
        break;
    case "TimePressure":
        <p>You are running the Time Pressure experiment.</p>
        break;
    case "Uncertainty":
        <p>You are running the Uncertainty experiment.</p>
        break;
    case "Competition":
        <p>You are running the Competition experiment.</p>
        break;
    case "Risk":
        <p>You are running the Risk experiment.</p>
        break;
    default:
        <p>Unknown experiment type.</p>
        break;
}

<button type="button" onclick="clearLocalStorage()">Clear Local Storage</button>

@{
    var index = 0;
    foreach (var markerBuoy in Model.MarkerBuoys)
    {
        var typeValue = (int)markerBuoy.MarkerBuoyType;
        <div id="markerBuoy_@index" 
             class="@(index == 0 ? "current-buoy" : "d-none")" 
             data-buoy-type="@typeValue">
            <img src="@markerBuoy.ImageURL" />
            @markerBuoy.Name
        </div>
        
        index++;
    }
}

<div class="buoy-buttons d-flex flex-wrap gap-2 my-3"></div>
    @foreach (MarkerBuoyType markerBuoyType in Enum.GetValues(typeof(MarkerBuoyType)))
    {
        var intValue = (int)markerBuoyType;
        <button type="button" 
                class="buoy-btn btn btn-primary px-4 py-2 rounded shadow-sm"
                data-buoy-type="@intValue"
                onclick="answer(@intValue, getCurrentBuoyType(), @experimentTypeInt)">
            @markerBuoyType.GetDescription()
        </button>
    }
</div>
<style>
    .buoy-buttons {
        justify-content: center;
    }
    .buoy-btn {
        font-size: 1.1rem;
        transition: background 0.2s, box-shadow 0.2s;
    }
    .buoy-btn:hover, .buoy-btn:focus {
        background: #0056b3;
        box-shadow: 0 0 8px rgba(0,0,0,0.15);
    }
</style>



<button type="button" onclick="nextBuoy()">Next Buoy</button>





<a href="/experiment/test">Submit Test</a>

<script src="/js/experiment/test.js"></script>